setwd("C:/Users/Mothballs/datasciencecoursera/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset")
install.packages("reshape2")
install.packages("data.table")
subject_train <- read.table("./train/subject_train.txt")
library(plyr)
# Step 1
# Merge the training and test sets to create one data set
###############################################################################
x_train <- read.table("train/X_train.txt")
y_train <- read.table("train/y_train.txt")
subject_train <- read.table("train/subject_train.txt")
x_test <- read.table("test/X_test.txt")
y_test <- read.table("test/y_test.txt")
subject_test <- read.table("test/subject_test.txt")
# create 'x' data set
x_data <- rbind(x_train, x_test)
# create 'y' data set
y_data <- rbind(y_train, y_test)
# create 'subject' data set
subject_data <- rbind(subject_train, subject_test)
# Step 2
# Extract only the measurements on the mean and standard deviation for each measurement
###############################################################################
features <- read.table("features.txt")
# get only columns with mean() or std() in their names
mean_and_std_features <- grep("-(mean|std)\\(\\)", features[, 2])
# subset the desired columns
x_data <- x_data[, mean_and_std_features]
# correct the column names
names(x_data) <- features[mean_and_std_features, 2]
# Step 3
# Use descriptive activity names to name the activities in the data set
###############################################################################
activities <- read.table("activity_labels.txt")
# update values with correct activity names
y_data[, 1] <- activities[y_data[, 1], 2]
# correct column name
names(y_data) <- "activity"
# Step 4
# Appropriately label the data set with descriptive variable names
###############################################################################
# correct column name
names(subject_data) <- "subject"
# bind all the data in a single data set
all_data <- cbind(x_data, y_data, subject_data)
# Step 5
# Create a second, independent tidy data set with the average of each variable
# for each activity and each subject
###############################################################################
# 66 <- 68 columns but last two (activity & subject)
averages_data <- ddply(all_data, .(subject, activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "averages_data.txt", row.name=FALSE)
print(x_train)
# Read all relevant data
xTestData <- read.table("test/X_test.txt")
yTestData <- read.table("test/y_test.txt")
subjectTestData <- read.table("test/subject_test.txt")
xTrainData <- read.table("train/X_train.txt")
yTrainData <- read.table("train/y_train.txt")
subjectTrainData <- read.table("train/subject_train.txt")
# Merge data sets
xDataMerged <- rbind(xTestData, xTrainData)
yDataMerged <- rbind(yTestData, yTrainData)
subectDataMerged <- rbind(subjectTestData, subjectTrainData)
# Extract measurements
meanSTD <- read.table("features.txt")[,2]
extractor <- grepl("mean|std", meanSTD)
xDataMeasures <- xDataMerged[, extractor]
names(xDataMeasures) <- meanSTD[extractor, 2]
print(XDataMeasures)
print(xDataMeasures)
names(xDataMeasures) <- meanSTD[extractor, 2]
names(xDataMeasures) = meanSTD
names(xDataMerged) = meanSTD
# Read all relevant data
xTestData <- read.table("test/X_test.txt")
yTestData <- read.table("test/y_test.txt")
subjectTestData <- read.table("test/subject_test.txt")
xTrainData <- read.table("train/X_train.txt")
yTrainData <- read.table("train/y_train.txt")
subjectTrainData <- read.table("train/subject_train.txt")
# Merge data sets
xDataMerged <- rbind(xTestData, xTrainData)
yDataMerged <- rbind(yTestData, yTrainData)
subectDataMerged <- rbind(subjectTestData, subjectTrainData)
# Extract measurements & change xdata column names
meanSTD <- read.table("features.txt")[,2]
names(xDataMerged) = meanSTD
extractor <- grepl("mean|std", meanSTD)
xDataMeasures <- xDataMerged[, extractor]
activityLabels <- read.table("activity_labels.txt")
names(yDataMerged) <- activityLabels
yDataMerged[, 1] <- activityLabels[yDataMerged[, 1], 2]
activityLabels <- read.table("activity_labels.txt")
yDataMerged[, 1] <- activityLabels[yDataMerged[, 1], 2]
names(yDataMerged) <- activityLabels
names(yDataMerged) <- "Activity"
activityLabels <- read.table("activity_labels.txt")
yDataMerged[, 1] <- activityLabels[yDataMerged[, 1], 2]
# Merge all data and write file for averages
absoluteData <- cbind(subjectDataMerged, xDataMerged, yDataMerged)
averages_data <- ddply(absoluteData, .(Subject, Activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "averages_data.txt", row.name=FALSE)
subectDataMerged <- rbind(subjectTestData, subjectTrainData)
names(subectDataMerged) = "Subject"
absoluteData <- cbind(subjectDataMerged, xDataMerged, yDataMerged)
averages_data <- ddply(absoluteData, .(Subject, Activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "averages_data.txt", row.name=FALSE)
xTestData <- read.table("test/X_test.txt")
yTestData <- read.table("test/y_test.txt")
subjectTestData <- read.table("test/subject_test.txt")
xTrainData <- read.table("train/X_train.txt")
yTrainData <- read.table("train/y_train.txt")
subjectTrainData <- read.table("train/subject_train.txt")
# Merge data sets
xDataMerged <- rbind(xTestData, xTrainData)
yDataMerged <- rbind(yTestData, yTrainData)
subectDataMerged <- rbind(subjectTestData, subjectTrainData)
# Correct all column names
meanSTD <- read.table("features.txt")[,2]
names(xDataMerged) = meanSTD
names(yDataMerged) <- "Activity"
names(subectDataMerged) = "Subject"
# Extract measurements for xData
extractor <- grepl("mean|std", meanSTD)
xDataMeasures <- xDataMerged[, extractor]
# Correct ydata activity labels
activityLabels <- read.table("activity_labels.txt")
yDataMerged[, 1] <- activityLabels[yDataMerged[, 1], 2]
# Merge all data and write file for averages
absoluteData <- cbind(subjectDataMerged, xDataMerged, yDataMerged)
averages_data <- ddply(absoluteData, .(Subject, Activity), function(x) colMeans(x[, 1:66]))
write.table(averages_data, "averages_data.txt", row.name=FALSE)
